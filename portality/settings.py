# -*- coding: utf-8 -*-
"""
Django settings for portality project.

Generated by 'django-admin startproject' using Django 1.8.17.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
from collections import namedtuple
import json
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Theme
THEME = 'haru'
TEMPLATES_DIR = os.path.join(BASE_DIR, 'templates')
THEME_DIR = os.path.join(BASE_DIR, 'templates', THEME)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False
if 'DJANGO_DEBUG' in os.environ:
    if (os.environ['DJANGO_DEBUG'] == 'Debug'):
        DEBUG = True

ALLOWED_HOSTS = ['nolooknews.com', 'gencode.me', 'localhost']


# Application definition

DJANGO_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
)
THIRD_PARTY_APPS = (
    'rest_framework',
    'graphos',
    # 'allauth',
    # 'allauth.account',
    # 'allauth.socialaccount',
    # 'allauth.socialaccount.providers.naver',
)
EDITOR_APPS = (
)
LOCAL_APPS = (
    'core',
    'giza',
    'issue',
    'accounts',
)
INSTALLED_APPS = DJANGO_APPS + THIRD_PARTY_APPS + EDITOR_APPS + LOCAL_APPS
# SITE_ID = 1

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'portality.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            os.path.join(THEME_DIR),
            os.path.join(TEMPLATES_DIR),
        ],
        'OPTIONS': {
            'debug': DEBUG,
            'loaders': [
                'django.template.loaders.filesystem.Loader',
                'django.template.loaders.app_directories.Loader',
            ],
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.global_settings',
                # 'django.template.context_processors.request',
            ],
        },
    },
]

WSGI_APPLICATION = 'portality.wsgi.application'

try:
    with open(os.path.join(BASE_DIR, "secrets.json")) as f:
        data = json.loads(f.read())
    SecretsNamedTuple = namedtuple('SecretsNamedTuple', data.keys(), verbose=False)
    secrets = SecretsNamedTuple(*[data[x] for x in data.keys()])
    SECRET_KEY = getattr(secrets, "SECRET_KEY")
    DB_NAME = getattr(secrets, "DB_NAME")
    DB_USER = getattr(secrets, "DB_USER")
    DB_PASSWORD = getattr(secrets, "DB_PASSWORD")
    EMAIL_HOST = getattr(secrets, "EMAIL_HOST")
    EMAIL_HOST_USER = getattr(secrets, "EMAIL_HOST_USER")
    EMAIL_HOST_PASSWORD = getattr(secrets, "EMAIL_HOST_PASSWORD")
    DEFAUL_FROM_EMAIL = getattr(secrets, "DEFAUL_FROM_EMAIL")
    SERVER_EMAIL = getattr(secrets, "SERVER_EMAIL")
except IOError:
    SECRET_KEY = 'k8n13h0y@$=v$uxg*^brlv9$#hm8w7nye6km!shc*&bkgkcd*p'
    DB_NAME = ''
    DB_USER = ''
    DB_PASSWORD = ''
    EMAIL_HOST_USER = ''
    EMAIL_HOST_PASSWORD = ''
    DEFAUL_FROM_EMAIL = ''
    SERVER_EMAIL = ''

EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': DB_NAME,
        'USER': DB_USER,
        'PASSWORD': DB_PASSWORD,
        'HOST': 'localhost',
        'PORT': '',
    }
}

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ]
}

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    # 'allauth.account.auth_backends.AuthenticationBackend'
)


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'ko-KR'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/assets/'
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

MEDIA_URL = '/upload/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'upload')

LOGIN_REDIRECT_URL = 'login'


# Setting for ranking
RANKING_START_YEAR = 2017
RANKING_START_MONTH = 5
RANKING_DATE_DELTA = 7  # 랭킹 계산에 포함될 시간(일)
RANKING_LIST_LIMIT = 10  # 보여줄 순위

# Setting for today
HOTISSUE_LIMIT = 20  # 핫이슈 리스트 개수
HOTISSUE_DATE_DELTA = 7  # 최근 뉴스에 포함될 시간(일)

# SEtting for Burst Call
POINT_MAX = 50  # point max
BURST_CALL_MIN_POINT = 10  # 버스터콜에 필요한 최소 포인트
BURST_CALL_ACOM = 1  # acom for burster call

# Setting for best
BEST_LIST_LIMIT = 20  # 리스트 당 개수
BEST_THRESHOLD = 20  # 베스트에 올라갈 기준

# Setting for issue
FILTER_DATE_DELTA = 7  # 핫이슈에 개제될 시간(일)
MEDIA_CHOICE = (  # 매체 종류
    ('조선일보', '조선일보'),
    ('중앙일보', '중앙일보'),
    ('동아일보', '동아일보'),
    ('한겨레', '한겨레'),
    ('경향신문', '경향신문'),
    ('오마이뉴스', '오마이뉴스'),
    ('미디어오늘', '미디어오늘'),
    ('KBS', 'KBS'),
    ('MBC', 'MBC'),
    ('SBS', 'SBS'),
    ('TV조선', 'TV조선'),
    ('채널A', '채널A'),
    ('JTBC', 'JTBC'),
    ('MBN', 'MBN'),
    ('YTN', 'YTN'),
    ('연합뉴스', '연합뉴스'),
    ('뉴시스', '뉴시스'),
    ('뉴스1', '뉴스1'),
    ('국민일보', '국민일보'),
    ('국제신문', '국제신문'),
    ('CBS노컷뉴스', 'CBS노컷뉴스'),
    ('NewBC', 'NewBC'),
    ('뉴데일리', '뉴데일리'),
    ('뉴스타파', '뉴스타파'),
    ('뉴스토마토', '뉴스토마토'),
    ('뉴스핌', '뉴스핌'),
    ('더팩트', '더팩트'),
    ('데일리안', '데일리안'),
    ('디지털데일리', '디지털데일리'),
    ('디지털타임스', '디지털타임스'),
    ('마이데일리', '마이데일리'),
    ('매일경제', '매일경제'),
    ('머니투데이', '머니투데이'),
    ('문화일보', '문화일보'),
    ('문화저널21', '문화저널21'),
    ('미디어스', '미디어스'),
    ('민중의소리', '민중의소리'),
    ('서울신문', '서울신문'),
    ('서울경제', '서울경제'),
    ('세계일보', '세계일보'),
    ('시사iN', '시사iN'),
    ('시사저널', '시사저널'),
    ('아시아경제', '아시아경제'),
    ('아시아투데이', '아시아투데이'),
    ('아이뉴스', '아이뉴스'),
    ('에너지경제신문', '에너지경제신문'),
    ('여성신문', '여성신문'),
    ('위키트리', '위키트리'),
    ('이데일리', '이데일리'),
    ('전자신문', '전자신문'),
    ('조세일보', '조세일보'),
    ('ZDNet', 'ZDNet'),
    ('쿠키뉴스', '쿠키뉴스'),
    ('파이낸셜뉴스', '파이낸셜뉴스'),
    ('프레시안', '프레시안'),
    ('한국경제', '한국경제'),
    ('한국일보', '한국일보'),
    ('헤럴드경제', '헤럴드경제'),
    ('기자협회보', '기자협회보'),
    ('기타', '기타'),
)
GIZA_IMAGE_SIZE_LIMIT = 100 * 1024  # 기자 사진 사이즈 제한

ABOUT_LINK = "/assets/html/howto_newissue.html"
LOGO_NAME = "/assets/images/nolooknews.png"
NEWBC_LINK = "http://newbc.kr/bbs/board.php?bo_table=nolook"
NEWBC_IMG = "/assets/images/newbc.png"
NEWBC_IMG_SMALL = "/assets/images/newbc-small.png"

# Admin information
ADMIN_EMAIL = 'gencode.me@gmail.com'
ADMIN_TWITTER = 'https://twitter.com/nolooknews'

FOOTER_TAGS = '<li><a href="%s">노룩뉴스 소개</a></li>\
<li>테마 : %s</li>\
<li>문의, 의견 보내기</li>\
<li><a href="mailto:%s"><img src="/assets/icons/email24.png"></a></li>\
<li><a href="%s"><img src="/assets/icons/twitter24.png" target="_blank"></a></li>'\
% (ABOUT_LINK, THEME, ADMIN_EMAIL, ADMIN_TWITTER)
